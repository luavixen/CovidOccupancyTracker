/* src/style.css
	Global stylesheet, loaded from src/index.ts */

/* Monochrome colors */
$white:			#ffffff;
$gray-100:		#f5f5f5;
$gray-200:		#eeeeee;
$gray-300:		#e0e0e0;
$gray-400:		#bdbdbd;
$gray-500:		#9e9e9e;
$gray-600:		#757575;
$gray-700:		#616161;
$gray-800:		#424242;
$gray-900:		#212121;
$black:			#000000;

/* Hover colors */
$hover-shallow:		rgba(255, 255, 255, 0.3);
$hover-more:		rgba(255, 255, 255, 0.4);
$hover-medium:		rgba(255, 255, 255, 0.5);
$hover-deep:		rgba(255, 255, 255, 0.7);

/* Accent colors */
$accent:		#673ab7;
$accent-light:		#9a67ea;
$accent-dark:		#320b86;
$accent-hover:		rgba(154, 103, 234, 0.3);
$accent-pressed:	rgba(154, 103, 234, 0.5);

/* Error colors */
$error:			#dc3545;
$error-light:		#ff6b70;
$error-dark:		#a3001e;

/* Theme dictionary */
$themes: (
	light: (
		level1: $white,
		level2: $white,
		level3: $white,
		level4: $white,

		text: $gray-900,
		text-disabled: $gray-700,

		hover-hover: $hover-more,
		hover-active: $hover-deep,

		accent: $accent,
		accent-focus: $accent-light,
		accent-hover: $accent-hover,
		accent-pressed: $accent-pressed,
		accent-text: $white,

		error: $error,
		error-focus: $error-light,
		error-text: $white
	),
	dark: (
		level1: $gray-900,
		level2: $gray-800,
		level3: $gray-700,
		level4: $gray-600,

		text: $gray-100,
		text-disabled: $gray-400,

		hover-hover: $hover-shallow,
		hover-active: $hover-medium,

		accent: $accent-light,
		accent-focus: $accent,
		accent-hover: $accent-hover,
		accent-pressed: $accent-pressed,
		accent-text: $white,

		error: $error-light,
		error-focus: $error,
		error-text: $white
	)
);

/* Theme dictionary "enumeration" */
$_level1:		"level1";
$_level2:		"level2";
$_level3:		"level3";
$_level4:		"level4";
$_text:			"text";
$_text-disabled:	"text-disabled";
$_hover_hover:		"hover-hover";
$_hover_active:		"hover-active";
$_accent:		"accent";
$_accent-focus:		"accent-focus";
$_accent-hover:		"accent-hover";
$_accent-pressed:	"accent-pressed";
$_accent-text:		"accent-text";
$_error:		"error";
$_error-focus:		"error-focus";
$_error-text:		"error-text";

/* Mixin for generating different code for every theme */
@mixin themed() {
	@each $theme, $map in $themes {
		.theme-#{$theme} & {
			$theme-map: () !global;
			@each $key, $submap in $map {
				$value: map-get(map-get($themes, $theme), '#{$key}');
				$theme-map: map-merge($theme-map, ($key: $value)) !global;
			}
			@content;
			$theme-map: null !global;
		}
	}
}
/* Utility function for grabbing colors from the themed() mixin */
@function t($key) {
	@return map-get($theme-map, $key);
}

/* Recommended margins */
$margin-small: 8px;
$margin-medium: 16px;
$margin-large: 32px;
/* Recommended paddings */
$padding-small: 8px;
$padding-medium: 16px;
$padding-large: 32px;
/* Recommended border radiuses */
$radius-small: 4px;
$radius-medium: 6px;
$radius-large: 12px;
$radius-50: 50%;
/* Recommended font weights */
$weight-normal: 400;
$weight-thin: 300;
$weight-thinner: 200;
$weight-boldish: 500;
$weight-bold: 600;

/* Utility class to disable selection of something */
.cot-noselect, .cot-noselect::before, .cot-noselect::after {
	user-select: none;
}
/* Utility class to disable interaction with something */
.cot-nointeract, .cot-nointeract::before, .cot-nointeract::after {
	user-select: none;
	pointer-events: none;
}

/* Default global styles (all elements) */
*, *::before, *::after {
	/* Built-in outlines are ugly, remove them */
	outline: none;

	/* All text (except headers) should use Open Sans */
	font-family: 'Open Sans', Arial, Helvetica, sans-serif;
	/* All text should default to normal weight */
	font-weight: $weight-normal;
}
/* Headers use the Roboto font */
h1, h2, h3, h4, h5, h6 { font-family: 'Roboto', Arial, Helvetica, sans-serif; }

/* Button styles */
.cot-button {
	cursor: pointer;
}

/* TextButton styles */
.cot-button-text {
	display: inline-block;

	margin: $margin-small;

	padding-left: 6px; padding-right: 6px;
	padding-top: 2px; padding-bottom: 2px;

	border-width: 1px;
	border-style: solid;
	border-radius: $radius-small;

	transition: background-color 0.15s, border-color 0.15s;

	@include themed() {
		border-color: t($_accent);
		background-color: t($_accent);
		color: t($_accent-text);
	}

	> span {
		white-space: nowrap;
		text-overflow: ellipsis;

		font-weight: $weight-bold;
	}
}
/* TextButton hover */
.cot-button-text:hover {
	@include themed() {
		border-color: t($_accent-focus);
		background-color: t($_accent-focus);
	}
}
/* TextButton custom dark settings */
.theme-dark .cot-button-text[data-focus-visible-added] {
	border-color: $white;
}
.theme-dark .cot-button-text.cot-button-pressed {
	border-color: $accent-dark !important;
	background-color: $accent-dark !important;
}
/* TextButton custom light settings */
.theme-light .cot-button-text {
	background-color: transparent;

	color: $accent;
}
.theme-light .cot-button-text:hover, .theme-light .cot-button-text[data-focus-visible-added] {
	background-color: $accent-hover;
}
.theme-light .cot-button-text.cot-button-pressed {
	background-color: $accent-pressed;
}

/* IconButton styles */
$iconbutton-outer: 48px;
$iconbutton-inner: 32;
$iconbutton-inner-pressed: 28;
.cot-button-image {
	display: inline-block;

	width: $iconbutton-outer;
	height: $iconbutton-outer;

	margin: $margin-small;

	border-radius: $radius-50;
	border-width: 1px;
	border-style: solid;
	border-color: transparent;

	background-color: transparent;

	transition: background-color 0.15s, border-color 0.15s;

	> .cot-button-icon-image {
		display: flex;
		justify-content: center;
		align-items: center;

		width: 100%;
		height: 100%;

		> svg {
			display: block;

			transform: scale($iconbutton-inner / 24);
			transition: transform 0.15s;

			path {
				@include themed() {
					fill: t($_text);
				}
			}
		}
	}
}
.cot-button-image.cot-button-pressed > .cot-button-icon-image > svg {
	transform: scale($iconbutton-inner-pressed / 24);
}
/* Special IconButton theme for accent backgrounds */
.cot-button-image.cot-button-image-accent {
	.cot-button-icon-image > svg path {
		@include themed() {
			fill: t($_accent-text) !important;
		}
	}
}
.cot-button-image.cot-button-image-accent:hover, .cot-button-image.cot-button-image-accent[data-focus-visible-added] {
	@include themed() {
		background-color: t($_hover_hover) !important;
	}
}
.cot-button-image.cot-button-image-accent[data-focus-visible-added] {
	border-color: $white !important;
}
.cot-button-image.cot-button-image-accent.cot-button-pressed {
	@include themed() {
		border-color: t($_hover_hover) !important;
		background-color: t($_hover_active) !important;
	}
}
/* IconButton custom dark styles */
.theme-dark .cot-button-image:hover, .theme-dark .cot-button-image[data-focus-visible-added] {
	background-color: $hover-shallow;
}
.theme-dark .cot-button-image[data-focus-visible-added] {
	border-color: $white;
}
.theme-dark .cot-button-image.cot-button-pressed {
	border-color: $hover-shallow;
	background-color: $hover-medium;
}
/* IconButton custom light styles */
.theme-light .cot-button-image:hover, .theme-light .cot-button-image[data-focus-visible-added] {
	background-color: $accent-hover;
}
.theme-light .cot-button-image[data-focus-visible-added] {
	border-color: $accent;
}
.theme-light .cot-button-image.cot-button-pressed {
	border-color: $accent;
	background-color: $accent-pressed;
}

/* Root (app) element styles */
.cot-app {
	/* Fill the whole page, always */
	position: fixed;
	left: 0;
	top: 0;
	right: 0;
	bottom: 0;
	margin: 0; padding: 0; border: 0;
	overflow: hidden;

	/* Use current theme colors */
	@include themed() {
		background-color: t($_level1);
		color: t($_text);
	}

	/* Make the view (attempt) to fill the whole screen too */
	> .cot-view {
		width: 100%;
		height: 100%;
	}
}

/* Header styles */
$header-size: 64px;
$header-max-width: 1000px;
.cot-header {
	display: flex;
	justify-content: center;

	width: 100%;
	max-width: 100%;
	height: $header-size;

	overflow: hidden;

	@include themed() {
		background-color: t($_accent);
		color: t($_accent-text);
	}

	> .cot-header-inner {
		display: flex;

		width: 100%;
		max-width: $header-max-width;
		height: 100%;

		margin-left: $margin-medium; margin-right: $margin-medium;

		> div > div {
			vertical-align: top;
		}

		/* Make the left side take up as much width as possible */
		> .cot-header-left {
			margin-right: auto;
		}
	}
}
/* HeaderBrand styles */
.cot-header-brand {
	display: inline-flex;
	align-items: center;

	height: 100%;

	> .cot-header-brand-text {
		margin: 0;
	}
}
/* HeaderLocation styles */
.cot-header-location {
	/* Use this div to align the text horizontally */
	display: inline-flex;
	align-items: center;

	height: 100%;

	/* Use a second div to align the text vertically */
	> .cot-header-location-inner {
		display: flex;
		flex-direction: column;

		text-align: right;

		/* Style the text */
		> p {
			margin: 0;

			font-weight: $weight-bold;
		}
		> .cot-header-location-title {
			font-size: 0.75em;
		}
	}
}
